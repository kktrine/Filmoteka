// Code generated by go-swagger; DO NOT EDIT.

package actor

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// DeleteActorNoContentCode is the HTTP code returned for type DeleteActorNoContent
const DeleteActorNoContentCode int = 204

/*
DeleteActorNoContent Успешное удаление

swagger:response deleteActorNoContent
*/
type DeleteActorNoContent struct {
}

// NewDeleteActorNoContent creates DeleteActorNoContent with default headers values
func NewDeleteActorNoContent() *DeleteActorNoContent {

	return &DeleteActorNoContent{}
}

// WriteResponse to the client
func (o *DeleteActorNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteActorBadRequestCode is the HTTP code returned for type DeleteActorBadRequest
const DeleteActorBadRequestCode int = 400

/*
DeleteActorBadRequest Некорректные входные данные

swagger:response deleteActorBadRequest
*/
type DeleteActorBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewDeleteActorBadRequest creates DeleteActorBadRequest with default headers values
func NewDeleteActorBadRequest() *DeleteActorBadRequest {

	return &DeleteActorBadRequest{}
}

// WithPayload adds the payload to the delete actor bad request response
func (o *DeleteActorBadRequest) WithPayload(payload string) *DeleteActorBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete actor bad request response
func (o *DeleteActorBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteActorBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
