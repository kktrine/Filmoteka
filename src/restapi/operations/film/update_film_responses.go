// Code generated by go-swagger; DO NOT EDIT.

package film

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// UpdateFilmOKCode is the HTTP code returned for type UpdateFilmOK
const UpdateFilmOKCode int = 200

/*
UpdateFilmOK Обновлено удачно

swagger:response updateFilmOK
*/
type UpdateFilmOK struct {
}

// NewUpdateFilmOK creates UpdateFilmOK with default headers values
func NewUpdateFilmOK() *UpdateFilmOK {

	return &UpdateFilmOK{}
}

// WriteResponse to the client
func (o *UpdateFilmOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// UpdateFilmBadRequestCode is the HTTP code returned for type UpdateFilmBadRequest
const UpdateFilmBadRequestCode int = 400

/*
UpdateFilmBadRequest Ошибка

swagger:response updateFilmBadRequest
*/
type UpdateFilmBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateFilmBadRequest creates UpdateFilmBadRequest with default headers values
func NewUpdateFilmBadRequest() *UpdateFilmBadRequest {

	return &UpdateFilmBadRequest{}
}

// WithPayload adds the payload to the update film bad request response
func (o *UpdateFilmBadRequest) WithPayload(payload string) *UpdateFilmBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update film bad request response
func (o *UpdateFilmBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateFilmBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
