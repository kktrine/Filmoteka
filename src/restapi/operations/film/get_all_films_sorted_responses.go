// Code generated by go-swagger; DO NOT EDIT.

package film

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetAllFilmsSortedOKCode is the HTTP code returned for type GetAllFilmsSortedOK
const GetAllFilmsSortedOKCode int = 200

/*
GetAllFilmsSortedOK Список фильмов

swagger:response getAllFilmsSortedOK
*/
type GetAllFilmsSortedOK struct {

	/*
	  In: Body
	*/
	Payload []*GetAllFilmsSortedOKBodyItems0 `json:"body,omitempty"`
}

// NewGetAllFilmsSortedOK creates GetAllFilmsSortedOK with default headers values
func NewGetAllFilmsSortedOK() *GetAllFilmsSortedOK {

	return &GetAllFilmsSortedOK{}
}

// WithPayload adds the payload to the get all films sorted o k response
func (o *GetAllFilmsSortedOK) WithPayload(payload []*GetAllFilmsSortedOKBodyItems0) *GetAllFilmsSortedOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all films sorted o k response
func (o *GetAllFilmsSortedOK) SetPayload(payload []*GetAllFilmsSortedOKBodyItems0) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllFilmsSortedOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*GetAllFilmsSortedOKBodyItems0, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAllFilmsSortedBadRequestCode is the HTTP code returned for type GetAllFilmsSortedBadRequest
const GetAllFilmsSortedBadRequestCode int = 400

/*
GetAllFilmsSortedBadRequest Ошибка

swagger:response getAllFilmsSortedBadRequest
*/
type GetAllFilmsSortedBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetAllFilmsSortedBadRequest creates GetAllFilmsSortedBadRequest with default headers values
func NewGetAllFilmsSortedBadRequest() *GetAllFilmsSortedBadRequest {

	return &GetAllFilmsSortedBadRequest{}
}

// WithPayload adds the payload to the get all films sorted bad request response
func (o *GetAllFilmsSortedBadRequest) WithPayload(payload string) *GetAllFilmsSortedBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all films sorted bad request response
func (o *GetAllFilmsSortedBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllFilmsSortedBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
