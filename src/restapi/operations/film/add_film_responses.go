// Code generated by go-swagger; DO NOT EDIT.

package film

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// AddFilmOKCode is the HTTP code returned for type AddFilmOK
const AddFilmOKCode int = 200

/*
AddFilmOK Успешно

swagger:response addFilmOK
*/
type AddFilmOK struct {
}

// NewAddFilmOK creates AddFilmOK with default headers values
func NewAddFilmOK() *AddFilmOK {

	return &AddFilmOK{}
}

// WriteResponse to the client
func (o *AddFilmOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// AddFilmBadRequestCode is the HTTP code returned for type AddFilmBadRequest
const AddFilmBadRequestCode int = 400

/*
AddFilmBadRequest Ошибка

swagger:response addFilmBadRequest
*/
type AddFilmBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewAddFilmBadRequest creates AddFilmBadRequest with default headers values
func NewAddFilmBadRequest() *AddFilmBadRequest {

	return &AddFilmBadRequest{}
}

// WithPayload adds the payload to the add film bad request response
func (o *AddFilmBadRequest) WithPayload(payload string) *AddFilmBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add film bad request response
func (o *AddFilmBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddFilmBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
